<%- partial('_partials/plugins/nprogress.ejs') %>
<%- js_ex(theme.static_prefix.jquery, 'jquery.min.js') %>
<%- js_ex(theme.static_prefix.bootstrap, 'js/bootstrap.min.js') %>
<%- js_ex(theme.static_prefix.internal_js, 'events.js') %>
<%- js_ex(theme.static_prefix.internal_js, 'plugins.js') %>

<%- partial('_partials/plugins/typed.ejs') %>

<% if (theme.lazyload.enable){ %>
  <% if (theme.lazyload.onlypost) { %>
    <% if (is_post() || is_page()) { %>
      <%- js_ex(theme.static_prefix.internal_js, 'img-lazyload.js') %>
    <% } %>
  <% } else { %>
    <%- js_ex(theme.static_prefix.internal_js, 'img-lazyload.js') %>
  <% } %>
<% } %>

<% var script_snippets = deduplicate(page.script_snippets) %>
<% for (var idx = 0; idx < script_snippets.length; idx++) { %>
  <%- script_snippets[idx] %>
<% } %>
<% page.script_snippets = [] %>

<% if (theme.custom_js) { %>
  <%- js(theme.custom_js) %>
<% } %>

<% 
  var danmakuEnabled = theme.danmaku && (theme.danmaku.enabled === true || theme.danmaku.enable === true);
  var danmakuPage = (theme.danmaku && theme.danmaku.page ? theme.danmaku.page : '/comments/').replace(/^\//, '');
  var currentPath = (page.path || '').replace(/index\.html$/, '');
  var shouldLoadDanmaku = danmakuEnabled && currentPath === danmakuPage;
%>
<% if (shouldLoadDanmaku) { %>
  <!-- 注入 danmakuConfig 配置到页面中（仅弹幕页加载） -->
  <script>
    const danmakuConfig = {
      page: '<%= theme.danmaku.page %>' || '/comments/',
      line: <%- theme.danmaku.line %> || 10,
      speed: <%- theme.danmaku.speed %> || 20,
      hover: <%= theme.danmaku.hover ? true : false %>,
      loop: <%= theme.danmaku.loop ? true : false %>
    };
  </script>
  <%- js_ex(theme.static_prefix.internal_js, 'comment.js') %>
  <%- js_ex(theme.static_prefix.internal_js, 'comments.js') %>
<% } %>

<% if (config.OhMyLive2d && config.OhMyLive2d.lazy) { %>
  <script>
    (function () {
      var cfg = <%- JSON.stringify(config.OhMyLive2d || {}) %>;
      function resolveParentElement(val) {
        if (!val) return document.body;
        if (typeof val === 'string') {
          if (val === 'document.body') return document.body;
          try {
            var el = document.querySelector(val);
            return el || document.body;
          } catch (_) { return document.body; }
        }
        return document.body;
      }
      function shouldLoad() {
        var mobileDisplay = cfg.option && typeof cfg.option.mobileDisplay === 'boolean' ? cfg.option.mobileDisplay : false;
        if (!mobileDisplay && (window.innerWidth < 768 || /Mobile|Android|iP(hone|od)|IEMobile|BlackBerry/i.test(navigator.userAgent))) {
          return false;
        }
        return true;
      }
      function loadOML() {
        if (!shouldLoad()) return;
        var s = document.createElement('script');
        s.src = cfg.CDN || 'https://registry.npmmirror.com/oh-my-live2d/latest/files/index.min.js';
        s.defer = true;
        s.onload = function () {
          if (!window.OhMyLive2D || !window.OhMyLive2D.load) return;
          var opt = cfg.option || {};
          var options = {
            mobileDisplay: !!opt.mobileDisplay,
            models: Array.isArray(opt.models) ? opt.models : [],
            parentElement: resolveParentElement(opt.parentElement),
            primaryColor: opt.primaryColor,
            sayHello: !!opt.sayHello,
            libraryUrls: opt.libraryUrls || undefined
          };
          try {
            var p = window.OhMyLive2D.load(options);
            var hookStr = <%- JSON.stringify(config.OhMyLive2d.then || '') %>;
            if (hookStr && typeof p.then === 'function') {
              try {
                var hook = eval(hookStr);
                if (typeof hook === 'function') p.then(hook);
              } catch (e) { /* ignore hook error */ }
            }
          } catch (e) { /* ignore load error */ }
        };
        document.head.appendChild(s);
      }
      function start() {
        if ('requestIdleCallback' in window) {
          requestIdleCallback(loadOML);
        } else {
          window.setTimeout(loadOML, 0);
        }
      }
      if (document.readyState === 'complete') start();
      else window.addEventListener('load', start, { once: true });
    })();
  </script>
<% } %>

<!-- 主题的启动项，将它保持在最底部 -->
<!-- the boot of the theme, keep it at the bottom -->
<%- js_ex(theme.static_prefix.internal_js, 'boot.js') %>
